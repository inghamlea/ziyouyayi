{"version":3,"file":"css/app.0d563c5a.css","mappings":"AA4NA,sBACA,8CACA,mCACA,kCAGA,SACA,WACA,yBACA,SAGA,CAEA,6CAVA,kBACA,cAKA,iBACA,iBAWA,CARA,uBAGA,gBACA,sBACA,YAGA,CAGA,2BACA,eACA,CAEA,kDACA,aACA,CAEA,kDACA,aACA,CAEA,yBACA,yBACA,gBACA,aACA,CAEA,6BACA,aACA,mBACA,gBACA,CAEA,+BACA,YACA,gBACA,CAEA,8BACA,YACA,kBACA,eACA,CAEA,mCACA,UACA,CC3FA,sBACA,8CACA,mCACA,kCAGA,SACA,WACA,yBACA,SAGA,CAEA,6CAVA,kBACA,cAKA,iBACA,iBAWA,CARA,uBAGA,gBACA,sBACA,YAGA,CAGA,2BACA,eACA,CAEA,kDACA,aACA,CAEA,yBACA,yBACA,gBACA,aACA,CAEA,6BACA,aACA,mBACA,gBACA,CAEA,+BACA,YACA,gBACA,CAEA,8BACA,YACA,kBACA,eACA,CAEA,mCACA,UACA,CCjHA,KACA,8CACA,mCACA,kCACA,kBACA,cACA,SACA,YACA,yBACA,aACA,iBACA,iBACA,CAEA,QACA,aACA,8BACA,kBACA,CAEA,yBACA,WACA,CAEA,mCACA,eACA,CAEA,iCACA,YACA,iBACA,aACA,CAEA,OACA,gBACA,CAEA,SACA,qBACA,iBACA,cACA,gBACA,sBACA,gBACA,CAEA,MACA,gBACA","sources":["webpack://vue2/./src/components/MetaPanel.vue","webpack://vue2/./src/components/GooglePanel.vue","webpack://vue2/./src/App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div v-show=\"!ready\" class=\"tips\">\r\n      <el-empty description=\"需要刷新与录入数据，请切换到广告页面，并选择单日的时间\"></el-empty>\r\n    </div>\r\n    <el-table v-show=\"ready\"\r\n              size=\"small\"\r\n              :data=\"tableData\"\r\n              style=\"width: 100%\">\r\n      <el-table-column prop=reach label=\"覆盖人数\" width=\"70\">\r\n        <template v-slot=\"scope\">\r\n          <div> {{ parseInt(scope.row.reach) + parseInt(scope.row.inflated.reach) }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"增加\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.reach\" oninput=\"value=value.replace(/[^\\d]/g,'')\" size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=impressions label=\"展示次数\" width=\"70\">\r\n        <template v-slot=\"scope\">\r\n          <div> {{ parseInt(scope.row.impressions) + parseInt(scope.row.inflated.impressions) }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"增加\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.impressions\" oninput=\"value=value.replace(/[^\\d]/g,'')\" size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"花费金额\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ (parseFloat(scope.row.spend) + parseFloat(scope.row.inflated.spend)).toFixed(2) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"增值\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.spend\" @input=\"handleSpendEdit(scope.row)\" size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"成效\" width=\"60\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ (scope.row.results + parseInt(scope.row.inflated.results ?? 0)) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"加成效\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.results\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                    size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n          prop=\"cost_per_result\" label=\"单次成效\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n            <span>{{\r\n                ((scope.row.spend + parseFloat(scope.row.inflated.spend)) / (scope.row.results + parseInt(scope.row.inflated.results ?? 0))).toFixed(2)\r\n              }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"其他事件\" type=\"expand\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"20\">\r\n              <label>点击</label>\r\n              <span>{{ parseInt(scope.row.clicks) + parseInt(scope.row.inflated.clicks ?? 0) }}</span>\r\n              <el-input v-model=\"scope.row.inflated.clicks\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                        size=\"mini\"></el-input>\r\n            </el-col>\r\n            <el-col :span=\"20\" v-for=\"(item, index) in scope.row.action\" :key=\"item.name\">\r\n              <label>{{ item.name | meta-event-trans }}</label>\r\n              <span>{{ parseInt(item.value) + parseInt(scope.row.inflated.action[index].value) }}</span>\r\n              <el-input v-model=\"scope.row.inflated.action[index].value\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                        size=\"mini\"></el-input>\r\n\r\n            </el-col>\r\n          </el-row>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n//https://docs.dataddo.com/docs/facebook-ads-fields-references\r\nimport MetaEvent from \"@/assets/meta-event.json\";\r\n\r\nexport default {\r\n  name: 'app',\r\n  created: function () {\r\n    this.init()\r\n  },\r\n  props: {\r\n    ready: false,\r\n    data: []\r\n  },\r\n  data() {\r\n    return {\r\n      tableData: this.data,\r\n      MetaEvent: MetaEvent\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler(newVal, oldVal) {\r\n\r\n        this.tableData = JSON.parse(JSON.stringify(newVal))\r\n\r\n        this.tableData.forEach(function (item) {\r\n          item.action = item.action.filter(function (sub) {\r\n            return MetaEvent.find(o => o.event === sub.name);\r\n          })\r\n\r\n          item.inflated.action = item.inflated.action.filter(function (sub) {\r\n            return MetaEvent.find(o => o.event === sub.name);\r\n          })\r\n        })\r\n\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    },\r\n    tableData: {\r\n      handler(newVal, oldVal) {\r\n        let total = 0;\r\n        newVal.forEach(function (item) {\r\n          if (parseFloat(item.inflated.spend) > 0) {\r\n            total += parseFloat(item.inflated.spend);\r\n          }\r\n        })\r\n        this.$emit(\"totalUpdated\", total)\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  },\r\n  filters: {\r\n    \"meta-event-trans\"(value) {\r\n      let find = MetaEvent.find(o => o.event === value);\r\n      return find ? find.name : value;\r\n    },\r\n  },\r\n  methods: {\r\n    async init() {\r\n\r\n      const that = this;\r\n\r\n\r\n    },\r\n    handleSpendEdit(scope) {\r\n      let value = scope.inflated.spend.replace(/[^\\-\\d.]/g, '') // 只能输入.和-和数字\r\n      value = value.replace(/^\\./g, '')  //第一个字符不能是.\r\n      value = value.replace(/\\.{2,}/g, '.') // 不能连续输入.\r\n      value = value.replace(/(\\.\\d+)\\./g, '$1') // .后面不能再输入.\r\n      value = value.replace(/(-)\\./g, '$1') // -后面不能输入.\r\n      value = value.replace(/\\-{2,}/g, '-') // -只能保留一个\r\n      value = value.replace(/(\\d+|\\.)-/g, '$1') // 数字和.后面不能接-,不能出现类似11-, 12.-\r\n      value = value.replace(/-(0){2,}/g, \"$1\") // 不能出现-00,-001,-0001类似\r\n      value = value.replace(/(-)0+(\\d+)/g, '$1$2') // 不能出现-01,-02类似\r\n      value = value.replace(/^0+(\\d)/, '$1') // 第一位0开头，0后面为数字，则过滤掉，取后面的数字\r\n      value = value.replace(/(\\d{15})\\d*/, '$1') // 最多保留15位整数\r\n      value = value.replace(/(\\.\\d{2})\\d*/, '$1')// 最多保留2位小数\r\n      scope.inflated.spend = value === '' ? 0 : value\r\n    },\r\n    save(data) {\r\n      let that = this;\r\n\r\n      let list = [];\r\n      that.tableData.forEach(function (item) {\r\n\r\n\r\n        if (!item.inflated.results || item.inflated.results === \"\") {\r\n          item.inflated.results = 0;\r\n        }\r\n        //item.inflated.action = [];\r\n        // item.action.forEach(function (sub) {\r\n        //   item.inflated.action.push({\r\n        //     name: sub.name,\r\n        //     value: Math.floor(sub.value * item.inflated.results / item.results),\r\n        //   })\r\n        // })\r\n\r\n        list.push({\r\n          ad_id: item.ad_id,\r\n          adset_id: item.adset_id,\r\n          campaign_id: item.campaign_id,\r\n          reach: item.reach,\r\n          impressions: item.impressions,\r\n          spend: item.spend,\r\n          day: data.day,\r\n          clicks: item.clicks,\r\n          results: item.results,\r\n          action: item.action,\r\n          inflated: {\r\n            reach: item.inflated.reach === '' ? 0 : parseInt(item.inflated.reach),\r\n            impressions: item.inflated.impressions === '' ? 0 : parseInt(item.inflated.impressions),\r\n            spend: item.inflated.spend === '' ? 0 : parseFloat(item.inflated.spend),\r\n            clicks: item.inflated.clicks === '' ? 0 : parseFloat(item.inflated.clicks),\r\n            results: item.inflated.results === '' ? 0 : parseFloat(item.inflated.results),\r\n            action: item.inflated.action.filter(function (sub) {\r\n              sub.value = sub.value === '' ? 0 : parseInt(sub.value);\r\n              return true;\r\n            })\r\n          }\r\n        })\r\n      })\r\n      data.list = list;\r\n      chrome.tabs && chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\r\n        chrome.tabs.sendMessage(tabs[0].id, {name: \"MetaAI\", action: \"save\", data: data}, function (response) {\r\n          that.$message.success({message: '保存成功', duration: 1500});\r\n          console.log(response)\r\n        });\r\n      });\r\n      console.log(data)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n  width: 100%;\r\n  background-color: #f3f3f3;\r\n  padding: 0;\r\n  min-height: 260px;\r\n  position: relative;\r\n}\r\n\r\n.tips {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin: 10px 0 0;\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n  min-height: 260px;\r\n  position: relative;\r\n}\r\n\r\n\r\n.el-table {\r\n  margin: 10px 0 0;\r\n}\r\n\r\n.el-table--small .el-table__cell {\r\n  padding: 6px 0;\r\n}\r\n\r\n.el-input--mini .el-input__inner{\r\n  padding: 0 6px;\r\n}\r\n\r\n.el-row {\r\n  background-color: #f7f7f7;\r\n  margin-top: -8px;\r\n  padding: 6px 0;\r\n}\r\n\r\n.el-row > div {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 10px;\r\n}\r\n\r\n.el-row label {\r\n  width: 100px;\r\n  text-align: right;\r\n}\r\n\r\n.el-row span {\r\n  width: 100px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-row .el-input {\r\n  width: 80px;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"app\">\r\n    <div v-show=\"!ready\" class=\"tips\">\r\n      <el-empty description=\"需要刷新与录入数据，请切换到广告组页面，并选择单日的时间\"></el-empty>\r\n    </div>\r\n    <el-table v-show=\"ready\"\r\n              size=\"small\"\r\n              :data=\"tableData\"\r\n              style=\"width: 100%\">\r\n      <el-table-column prop=\"impressions\" label=\"展示次数\" width=\"75\">\r\n        <template v-slot=\"scope\">\r\n          <div> {{ scope.row.impressions + parseInt(scope.row.inflated.impressions) }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"增加\" width=\"75\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.impressions\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                    size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"clicks\" label=\"点击次数\" width=\"75\">\r\n        <template slot-scope=\"scope\">\r\n          <div> {{ scope.row.clicks + parseInt(scope.row.inflated.clicks) }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"增加\" width=\"75\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.clicks\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                    size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"花费金额\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ (parseFloat(scope.row.cost) + parseFloat(scope.row.inflated.cost)).toFixed(2) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"增值\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.cost\" @input=\"handleEdit(scope.row)\" size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"成效\" width=\"80\">\r\n        <template slot-scope=\"scope\">\r\n          <div> {{ scope.row.install_conversions + parseInt(scope.row.inflated.install_conversions) }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"增加\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-input v-model=\"scope.row.inflated.install_conversions\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                    size=\"mini\"></el-input>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"单次成效\" width=\"70\">\r\n        <template v-slot=\"scope\">\r\n            <span>{{\r\n                ((scope.row.cost + parseFloat(scope.row.inflated.cost)) / (scope.row.install_conversions + parseInt(scope.row.inflated.install_conversions ?? 0))).toFixed(2)\r\n              }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"其他事件\" type=\"expand\" width=\"70\">\r\n        <template v-slot=\"scope\">\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"20\">\r\n              <label>互动次数</label>\r\n              <span>{{ scope.row.interactions + parseInt(scope.row.inflated.interactions) }}</span>\r\n              <el-input v-model=\"scope.row.inflated.interactions\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                        size=\"mini\"></el-input>\r\n            </el-col>\r\n            <el-col :span=\"20\">\r\n              <label>转换次数</label>\r\n              <span>{{ scope.row.conversions + parseInt(scope.row.inflated.conversions) }}</span>\r\n              <el-input v-model=\"scope.row.inflated.conversions\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                        size=\"mini\"></el-input>\r\n            </el-col>\r\n            <el-col :span=\"20\">\r\n              <label>安装次数</label>\r\n              <span>{{ scope.row.install + parseInt(scope.row.inflated.install) }}</span>\r\n              <el-input v-model=\"scope.row.inflated.install\" oninput=\"value=value.replace(/[^\\d]/g,'')\"\r\n                        size=\"mini\"></el-input>\r\n            </el-col>\r\n          </el-row>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'app',\r\n  created: function () {\r\n    this.init()\r\n  },\r\n  props: {\r\n    ready: false,\r\n    data: []\r\n  },\r\n  data() {\r\n    return {\r\n      tableData: this.data\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler(newVal, oldVal) {\r\n        this.tableData = newVal\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    },\r\n    tableData: {\r\n      handler(newVal, oldVal) {\r\n        let total = 0;\r\n        newVal.forEach(function (item) {\r\n          if (parseFloat(item.inflated.cost) > 0) {\r\n            total += parseFloat(item.inflated.cost);\r\n          }\r\n        })\r\n        this.$emit(\"totalUpdated\", total)\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    async init() {\r\n\r\n      const that = this;\r\n\r\n\r\n    },\r\n    handleEdit(scope) {\r\n      let value = scope.inflated.cost.replace(/[^\\-\\d.]/g, '') // 只能输入.和-和数字\r\n      value = value.replace(/^\\./g, '')  //第一个字符不能是.\r\n      value = value.replace(/\\.{2,}/g, '.') // 不能连续输入.\r\n      value = value.replace(/(\\.\\d+)\\./g, '$1') // .后面不能再输入.\r\n      value = value.replace(/(-)\\./g, '$1') // -后面不能输入.\r\n      value = value.replace(/\\-{2,}/g, '-') // -只能保留一个\r\n      value = value.replace(/(\\d+|\\.)-/g, '$1') // 数字和.后面不能接-,不能出现类似11-, 12.-\r\n      value = value.replace(/-(0){2,}/g, \"$1\") // 不能出现-00,-001,-0001类似\r\n      value = value.replace(/(-)0+(\\d+)/g, '$1$2') // 不能出现-01,-02类似\r\n      value = value.replace(/^0+(\\d)/, '$1') // 第一位0开头，0后面为数字，则过滤掉，取后面的数字\r\n      value = value.replace(/(\\d{15})\\d*/, '$1') // 最多保留15位整数\r\n      value = value.replace(/(\\.\\d{2})\\d*/, '$1')// 最多保留2位小数\r\n      scope.inflated.cost = value === '' ? 0 : value\r\n    },\r\n    save(data) {\r\n      let that = this;\r\n\r\n      let list = [];\r\n      this.tableData.forEach(function (item) {\r\n        list.push({\r\n          account: item.account,\r\n          campaign: item.campaign,\r\n          group: item.group,\r\n          impressions: item.impressions,\r\n          interactions: item.interactions,\r\n          conversions: item.conversions,\r\n          clicks: item.clicks,\r\n          install: item.install,\r\n          install_conversions: item.install_conversions,\r\n          cost: item.cost,\r\n          day: data.day,\r\n          cost_inflated: item.inflated.cost,\r\n          inflated: {\r\n            impressions: item.inflated.impressions === '' ? 0 : parseInt(item.inflated.impressions),\r\n            interactions: item.inflated.interactions === '' ? 0 : parseInt(item.inflated.interactions),\r\n            clicks: item.inflated.clicks === '' ? 0 : parseInt(item.inflated.clicks),\r\n            conversions: item.inflated.conversions === '' ? 0 : parseInt(item.inflated.conversions),\r\n            install: item.inflated.install === '' ? 0 : parseInt(item.inflated.install),\r\n            install_conversions: item.inflated.install_conversions === '' ? 0 : parseInt(item.inflated.install_conversions),\r\n            cost: item.inflated.cost === '' ? 0 : parseFloat(item.inflated.cost)\r\n          }\r\n        })\r\n      })\r\n      data.list = list;\r\n      chrome.tabs && chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\r\n        chrome.tabs.sendMessage(tabs[0].id, {name: \"MetaAI\", action: \"save\", data: data}, function (response) {\r\n          that.$message.success({message: '保存成功', duration: 1500});\r\n          console.log(response)\r\n        });\r\n      });\r\n      console.log(data)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n  width: 100%;\r\n  background-color: #f3f3f3;\r\n  padding: 0;\r\n  min-height: 260px;\r\n  position: relative;\r\n}\r\n\r\n.tips {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin: 10px 0 0;\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n  min-height: 260px;\r\n  position: relative;\r\n}\r\n\r\n\r\n.el-table {\r\n  margin: 10px 0 0;\r\n}\r\n\r\n.el-table--small .el-table__cell {\r\n  padding: 6px 0;\r\n}\r\n\r\n.el-row {\r\n  background-color: #f7f7f7;\r\n  margin-top: -8px;\r\n  padding: 6px 0;\r\n}\r\n\r\n.el-row > div {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 10px;\r\n}\r\n\r\n.el-row label {\r\n  width: 100px;\r\n  text-align: right;\r\n}\r\n\r\n.el-row span {\r\n  width: 100px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-row .el-input {\r\n  width: 80px;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"app\">\r\n    <div v-show=\"actived\">\r\n      <div class=\"header\">\r\n        <div>\r\n          <el-date-picker v-model=day type=\"date\" size=\"small\" readonly=\"readonly\" width=\"60\" placeholder=\"选择日期\">\r\n          </el-date-picker>\r\n          <el-button class=\"fresh\" type=\"primary\" size=\"small\" :disabled=\"!ready\" v-on:click=\"fresh\" plain>获取数据\r\n          </el-button>\r\n          <el-button class=\"save\" type=\"primary\" size=\"small\" :disabled=\"!ready\" v-on:click=\"save\">保存</el-button>\r\n          <span class=\"inflate\">{{ total }}</span>\r\n        </div>\r\n        <el-switch style=\"display: block\" v-model=\"protect\" active-color=\"#13ce66\" inactive-color=\"#e3e3e3\"\r\n                   active-text=\"\" inactive-text=\"数据防护\" @change=\"protectChanged\">\r\n        </el-switch>\r\n      </div>\r\n      <meta-panel v-if=\"platform==='meta'\" ref=\"panel\" :data=\"tableData\" :ready=\"ready\"\r\n                  @totalUpdated=\"totalUpdated\"></meta-panel>\r\n      <google-panel v-if=\"platform==='google'\" ref=\"panel\" :data=\"tableData\" :ready=\"ready\"\r\n                    @totalUpdated=\"totalUpdated\"></google-panel>\r\n    </div>\r\n    <div v-show=\"!actived\">\r\n      <el-empty description=\"请联系管理员激活\">\r\n        {{ visitorId }}\r\n      </el-empty>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MetaPanel from \"@/components/MetaPanel.vue\";\r\nimport GooglePanel from \"@/components/GooglePanel.vue\";\r\n\r\nexport default {\r\n  name: 'app',\r\n  components: {\r\n    MetaPanel,\r\n    GooglePanel\r\n  },\r\n  created: function () {\r\n    this.init()\r\n  },\r\n  data() {\r\n    return {\r\n      actived: false,\r\n      visitorId: '',\r\n      ready: false,\r\n      day: '',\r\n      account: 0,\r\n      protect: false,\r\n      platform: 'meta',\r\n      total: 0,\r\n      tableData: []\r\n    }\r\n  },\r\n  methods: {\r\n    async init() {\r\n\r\n      const that = this;\r\n\r\n      chrome.tabs && chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\r\n        chrome.tabs.sendMessage(tabs[0].id, {name: \"MetaAI\", action: \"init\"}, function (response) {\r\n\r\n          console.log('MetaAI.init');\r\n          console.log(response);\r\n\r\n          that.platform = response.platform;\r\n          that.account = response.account;\r\n          that.protect = response.protect;\r\n          that.ready = response.ready;\r\n          that.visitorId = response.visitorId;\r\n\r\n          that.$http.get('/meta/active?id=' + that.visitorId).then(res => {\r\n            that.actived = res.data.data;\r\n            console.log(res)\r\n          })\r\n\r\n        });\r\n      });\r\n\r\n      chrome.runtime && chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n        if (request.name === \"MetaAI\" && request.action === \"sending\") {\r\n\r\n          sendResponse(JSON.stringify(request));\r\n\r\n          if (request.data.since !== request.data.until) {\r\n            that.$message.error({message: '请切换到广告Tab，并选择单日日期（不能选择范围）', duration: 1500});\r\n          } else {\r\n            that.day = request.data.since;\r\n            that.account = request.data.account;\r\n            that.tableData = request.data.list;\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n    },\r\n    totalUpdated(total) {\r\n      this.total = total;\r\n    },\r\n    protectChanged(event) {\r\n      var that = this\r\n      chrome.tabs && chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\r\n        chrome.tabs.sendMessage(tabs[0].id, {\r\n          name: \"MetaAI\",\r\n          action: \"protect\",\r\n          data: {\r\n            account: that.account,\r\n            protect: event\r\n          }\r\n        }, function (response) {\r\n          // 回调函数(传回的信息)\r\n          console.log(response)\r\n        });\r\n      });\r\n    },\r\n    fresh() {\r\n      chrome.tabs && chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {\r\n        chrome.tabs.sendMessage(tabs[0].id, {name: \"MetaAI\", action: \"fetching\"}, function (response) {\r\n          console.log(response)\r\n        });\r\n      });\r\n    },\r\n    save() {\r\n      this.$refs.panel.save({\r\n        account: this.account,\r\n        protect: this.protect,\r\n        day: this.day\r\n      })\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n  width: 760px;\r\n  background-color: #f3f3f3;\r\n  padding: 10px;\r\n  min-height: 260px;\r\n  position: relative;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.el-date-editor.el-input {\r\n  width: 120px;\r\n}\r\n\r\n.el-input--suffix .el-input__inner {\r\n  padding-right: 0;\r\n}\r\n\r\n.el-input--mini .el-input__inner {\r\n  height: 25px;\r\n  line-height: 25px;\r\n  padding: 0 6px;\r\n}\r\n\r\n.fresh {\r\n  margin-left: 15px;\r\n}\r\n\r\n.inflate {\r\n  display: inline-block;\r\n  margin-left: 35px;\r\n  color: #409EFF;\r\n  font-weight: bold;\r\n  background-color: #ffffff;\r\n  padding: 6px 15px;\r\n}\r\n\r\n.save {\r\n  margin-left: 20px;\r\n}\r\n\r\n</style>\r\n"],"names":[],"sourceRoot":""}